<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="banjo-lang">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="E:/eclipse/eclipse-rcp-kepler-M6-win32-x86_64/eclipse"/>
    <property name="banjo.editor.location" value="../eclipse-workspace/banjo.editor"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.11.0.v201303080030/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="Plug-in Dependencies.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.annotation_1.1.0.v20130227-1643.jar"/>
    </path>
    <path id="banjo-lang.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <pathelement location="lib/functionaljava.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.ceylon"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.ceylon"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test"/>
            <classpath refid="banjo-lang.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.gen.xml" dir="${banjo.editor.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.gen.xml" dir="${banjo.editor.location}" inheritAll="false" target="build"/>
    </target>
    <target name="banjo.dom">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="banjo.parser.ast">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestCallParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestCallParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestCommentParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestCommentParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestCondParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestCondParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestCondParser.testBadCond2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestCondParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestFunctionLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestFunctionLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestFunctionLiteralParser.testLazyWithParens">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestFunctionLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestLetParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestLetParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestListLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestListLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestMathParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestMathParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestNumberLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestNumberLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.enums">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.objValue2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.objValue2a">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.objValue3">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.table1b">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestObjectLiteralParser.testBackdentError">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestProjectionParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestProjectionParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestSetLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestSetLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestSourceFileAnalysis">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.idesupport.test.TestSourceFileAnalysis" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestStringLiteralParser">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestStringLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestStringLiteralParser.test1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestStringLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="banjo.dom.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.dom.test.TestCallParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestCommentParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestCondParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestFunctionLiteralParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestIdParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestLetParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestListLiteralParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestMathParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestNumberLiteralParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestObjectLiteralParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestProjectionParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestSetLiteralParser" todir="${junit.output.dir}"/>
            <test name="banjo.dom.test.TestStringLiteralParser" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="TestBanjoScanner">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="banjo.parser.test.TestBanjoScanner" todir="${junit.output.dir}"/>
            <classpath refid="banjo-lang.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
