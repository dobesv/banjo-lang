<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
This is a wrapper around the eclipse-generated build file.  It's used by continuous integration systems to
build the project.

To generate the build.gen.xml from Eclipse:

1. Right-click the project and choose Export ...
2. Choose General > Ant BuildFiles ...
3. Select this eclipse project
4. Set the Ant filename to build.gen.xml
5. Uncheck "Create target to compile using eclipse compiler..."
6. Click "Finish"

-->
<project name="banjo" default="test">
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<path id="banjo-lang.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/functionaljava-4.3-SNAPSHOT.jar" />
		<pathelement location="lib/junit.jar" />
		<pathelement location="lib/org.hamcrest.core_1.1.0.v20090501071000.jar" />
		<pathelement location="lib/org.eclipse.jdt.annotation_2.0.0.v20140415-1436.jar" />
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.ceylon" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="test">
				<exclude name="**/*.launch" />
				<exclude name="**/*.ceylon" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}" encoding="utf-8">
			<src path="src" />
			<src path="test" />
			<classpath refid="banjo-lang.classpath" />
		</javac>
	</target>
	<target name="test" depends="build-project">
		<mkdir dir="${junit.output.dir}" />
		<junit printsummary="withOutAndErr">
			<classpath refid="banjo-lang.classpath" />
			<formatter type="xml" />
			<batchtest todir="${junit.output.dir}">
				<fileset dir="test">
					<include name="**/Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
